name: Test Build

on:
  workflow_dispatch:  # 只允许手动触发
    inputs:
      architecture:
        description: 'Target architecture'
        required: true
        default: 'amd64'
        type: choice
        options:
        - amd64
        - arm64

jobs:
  test-build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Set up QEMU (for ARM64 emulation)
      if: github.event.inputs.architecture == 'arm64'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
        
    - name: Create output directory
      run: |
        mkdir -p .output
        
    - name: Run containerized build
      run: |
        # 为不同架构设置不同的基础镜像
        if [ "${{ github.event.inputs.architecture }}" = "arm64" ]; then
          BASE_IMAGE="arm64v8/ubuntu:20.04"
        else
          BASE_IMAGE="ubuntu:20.04"
        fi
        
        echo "Building for architecture: ${{ github.event.inputs.architecture }}"
        echo "Using base image: $BASE_IMAGE"
        
        # 运行构建脚本
        python3 pack_in_container.py --image "$BASE_IMAGE" --mount-dir .output
        
    - name: Verify build output
      run: |
        echo "Build output contents:"
        ls -la .output/
        
        # 检查构建结果
        if [ -f .output/build_summary.txt ]; then
          echo "Build summary:"
          cat .output/build_summary.txt
        fi
        
        if [ -f .output/build_report.json ]; then
          echo "Build report exists"
          echo "Build report content:"
          cat .output/build_report.json
        else
          echo "❌ Build report not found"
        fi
        
    - name: Package build artifacts
      run: |
        cd .output
        # 创建 pack_{arch}.tar.gz 包
        tar -czf ../pack_${{ github.event.inputs.architecture }}.tar.gz .
        cd ..
        
        # 显示包的大小和内容
        echo "Package size:"
        ls -lh pack_${{ github.event.inputs.architecture }}.tar.gz
        
        echo "Package contents (first 20 files):"
        tar -tzf pack_${{ github.event.inputs.architecture }}.tar.gz | head -20
        
    - name: Generate checksums
      run: |
        # 生成 SHA256 校验和
        sha256sum pack_${{ github.event.inputs.architecture }}.tar.gz > pack_${{ github.event.inputs.architecture }}.tar.gz.sha256
        
        echo "Checksums:"
        cat pack_${{ github.event.inputs.architecture }}.tar.gz.sha256
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-kvcache-packages-${{ github.event.inputs.architecture }}
        path: |
          pack_${{ github.event.inputs.architecture }}.tar.gz
          pack_${{ github.event.inputs.architecture }}.tar.gz.sha256
          .output/build_summary.txt
          .output/build_report.json
        retention-days: 7 